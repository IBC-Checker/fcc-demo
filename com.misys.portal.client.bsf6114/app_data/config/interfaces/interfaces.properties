# -------------------------------------------------------------------
# 
#    INTERFACE PROPERTIES  CONFIGURATION
# 
# -------------------------------------------------------------------


errorlogger = interfaceserror
interfacemessagelogger = interfacemessage
smtp_host = ${smtp.host}
xml_output_directory = c:/dev/outgoing/V5
# Location for TI outgoing messages.
xml_jms_output_directory = c:/dev/outgoing/TI/V5
output_directory = c:/dev/outgoing/V5Extraction
xmlout.enable = true
export.tnxdata2fbi.enable = false
fbi.xmlout.enable = false
fab.xmlout.enable = false
integration_output_directory = c:/dev/outgoing/integration/FBI
provider_url = tcp://blrcswfbcc0001:61616
fbi_users_queue_name = FBCC.TO.FBI
fbi_tnx_queue_name = FBCC.TO.FBI
fab_users_queue_name = FBCC.TO.FFC
erp.enable = true
xml_output_directory_V3 = c:/dev/outgoing/V5toV3
xml_output_directory_mobi = c:/dev/outgoing/mobi
attachment_output_directory_loan = \\blrvswadev01\docs_upload
upload_attachments_loan_directory = false
# Location for Bulk outgoing xml to be picked up by Essence Queue 
xml_output_directory_bk_mobi = c:/dev/outgoing/bulk/mobi
export.finshare.user.enabled = false
finshare_provider_url = tcp://blrcswfbcc0001:61616
fbcc_to_finshare_queue_name = FBCC.TO.FFC.FINSHARE
#Outgoing directory for Payment Initiation Xml
xml_output_directory_payment = c:/dev/outgoing/payment

xsd_location = /config/xsd
xcl_location = /config/xcl
sync_bo_erp = false
#vCollaboration 
collaboration_xml_company_output_directory = c:/dev/outgoing/company
collaboration_xml_user_output_directory = c:/dev/outgoing/user
collaboration_xml_output_directory = c:/dev/outgoing/collaboration
collaboration_from_address = ${alert.email.from.address}
collaboration_from_personal = ${alert.email.from.personal}

# Common party details
provider_url_common_party = file:/D:/jms/Response
common_party_queue_name = MPSenderQueue
export.common_party_data.enable = false
# TSU variables
#tsu_xml_output_directory = X:/swiftnet/tsu
tsu_message_tnx_stat_code = 04
tsu_xml_output_directory = c:/dev/outgoing/tsu/emission
# JMS Interfaces
ti_attachment_location = c:/dev/TI/docs
jms_error_directory = c:/dev/error/
# Properties for sending/receiving messages
batchsize = 5
retrycount = 5
attachments = database
# status_file_upload_attachment_directory = /prodlib/BIBT/StatusFileUpload/incoming/attachments
file_upload_attachment_directory = ${FILEUPLOAD_ATTACHMENT_DIRECTORY}
#  Switch JMSOut interface 
xmljmsoutTI.enable = true
#  Switch MHUB interfaces 
mhubxmlout.enable = true
mhubenablexmlout.enable = false
mhubloginpwdprintout.enable = false
mhubpasswordresetprintout.enable = false
#  Switch ESSENCE interfaces 
essencexmlout.enable = false
essenceenablexmlout.enable = false

#  Transaction Next Authorisers Notification
sendmailnextauthoriser.enable = true
#Property defines whether individual child transactions within a bulk, when processed, should trigger email alert to customer or not. 
childTnxSubmissionAlert = ${enable.bulk.child.transaction.submission.alert.parameter}

balanceAlert.enable = false

#  properties to configure JMS to TI/any trade BO
module.trade.initialContextFactory = com.sun.jndi.fscontext.RefFSContextFactory
module.trade.providerURL = iiop://blrvswasprtl07:2817
module.trade.factory = jms/MTPQueueConnectionFactory
module.trade.out.queue = TP.OUT
module.trade.invoker = 01
module.trade.retry = true
#  Switch GPP interfaces 
gppxmlout.enable = false



# properties to Azure JMS configuration example
#  ----Example values for the empty properties begins---
# (module.trade.user=RootManageSharedAccessKey, module.trade.password=CYnjArCYwGBnYUr/zOVaRJsdFd326pj+hPrjauW8YKU=)
# (module.trade.secondary.user=RootManageSharedAccessKey1, module.trade.secondary.password=Sl8Wuh4cqh8N9QjCjr8i5H3YMNycNlQcYN7fT1qv9UE=)
# (AsyncQueueConnectionFactorySecondary=SBCF,TradeOutgoingMessageSenderSecondaryQueue=QUEUE_OUT)
#  ----Example values for the empty properties ends---
#module.trade.initialContextFactory = org.apache.qpid.jms.jndi.JmsInitialContextFactory
#module.trade.providerURL = file:/C:/JNDI/mq/.bindings
#module.trade.factory = SBCF
#module.trade.out.queue = QUEUE_OUT
#module.trade.invoker = 01
#module.trade.retry = true
#Following properties needs to kept empty as these are added in JMS sender Azure
module.trade.user=
module.trade.password=
module.trade.secondary.user=
module.trade.secondary.password=
AsyncQueueConnectionFactorySecondary=
TradeOutgoingMessageSenderSecondaryQueue=


#  The below mentioned property values need to be added based on the Bank requirement 
#  
#AsyncQueueConnectionFactory = 
#AsyncQueueConnectionFactorySecondary = 	
 
# Historical loan request can be sent or received through JMS or WebServicesusing below property.
# if it is set to false, request and response is through JMS, else it is through WebServices.
webservice.enable = false		
relationShip.manager.filter.enable = false

#  property to configure ack/nack for treasury incoming messages
treasury.ack.enable = false
xmlinackSenderStylesheet = /treasury/xsl/fbcctokondorack.xsl
provider_url_treasury = tcp://localhost:14616
queue_name_treasury = dynamicQueues/ACK.2.K
user_treasury = admin
password_treasury = admin

# property to configure ack/nack for incoming exchange rate messages
exchangeRate.ack.enable = false
exchangeRateAckNackStylesheet = /treasury/xsl/exchange_rate_ack.xsl
exchangeRateParseErrorsStylesheet = /treasury/xsl/exchange_rate_parse_error.xsl
provider_url_exchangeRate = tcp://localhost:14616
queue_name_exchangeRate = dynamicQueues/exchangeRateQueue
user_exchangeRate= admin
password_exchangeRate = admin


alert.email.from.address = portal@misys.com
alert.email.from.personal = Portal
alert.email.to.address =

enable.bulk.child.transaction.submission.alert.parameter=true

#Backoffice Simulation for openAPI 
xmloutSimulationCoreBanking.enable = false

#properties to configure JMS to Payment 
module.payment.initialContextFactory = org.apache.activemq.jndi.ActiveMQInitialContextFactory
module.payment.providerURL = tcp://localhost:14616
module.payment.factory = QueueConnectionFactory
module.payment.out.queue = dynamicQueues/FCC.TO.FFC.GPP
module.payment.invoker = 01
module.payment.retry = true


# Property to Configure ack/nack for trade incoming messages
trade.ack.enable = false
#Property to show the Failed Status when NACK is recieved for Trade transactions
trade.ack.nack.display.status =false
#enable/disable alert
ffdc.alert.enable=false

#Property for enabling user provisioning
userprovisioning.enabled = false

#Property for enabling FCC-FCM specific user
fcm.userprovisioning.enabled = false
