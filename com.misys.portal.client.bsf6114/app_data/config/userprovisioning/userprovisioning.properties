# -------------------------------------------------------------------
# 
#  USER PROVISIONING CONFIGURATION
# 
# -------------------------------------------------------------------

#Below entries are to specify which User provisioning service to be used
services.UserProvisioningService.classname=com.misys.portal.userprovisioning.services.FCMUserProvisioning

#Property to read max length for fields
services.UserProvisioningService.addressLength = 150

#Property to check address is mandatory
services.UserProvisioningService.mandateAddress = false

#End point for Create User
-services.UserProvisioningService.createUserEndPoint = 

#End point for Modify User
-services.UserProvisioningService.modifyUserEndPoint = 

#End point for Delete  User
-services.UserProvisioningService.deleteUserEndPoint =

#End point to Enable Disable FCC user in FCM
-services.UserProvisioningService.enableDisableFcmUserEndPoint =

#End point to Get User Details from FCM
-services.UserProvisioningService.getFcmUserEndPoint =

services.UserProvisioningService.mandateContactNumber = false

services.UserProvisioningService.pincodeMaxLength = 16

services.UserProvisioningService.faxMaxLength = 24

user.languages = en_us, en_uk, en_uk, fr_fr, ar_ar 

# A capability is introduced to capture an additional Telephone Number for a Corporate User. 
# The "Telephone Number" field would be displayed on the Corporate User UI if it is enabled. 
# The length of the field can be configured. It would follow the same regular expression as that of mobile number if it is enabled for validation.
services.UserProvisioningService.telephoneNumberLength = 24
services.UserProvisioningService.validateTelephoneNumber = true  
services.UserProvisioningService.enableTelephoneNumber = false 

services.UserProvisioningService.header1.key=_USERID
services.UserProvisioningService.header1.value=
services.UserProvisioningService.header2.key=_KEY
services.UserProvisioningService.header2.value=

#Below Properties are to specify if FCM is using Oauth2 ,set it true if FCM is using Oauth2 and provide Oauth2 token details
services.UserProvisioningService.fcm.oidc.sso.enabled = false
services.UserProvisioningService.fcm.oidc.sso.grant.type=
services.UserProvisioningService.fcm.oidc.sso.auth.token.url =
services.UserProvisioningService.fcm.oidc.sso.client.id = 
services.UserProvisioningService.fcm.oidc.sso.client.secret = 

