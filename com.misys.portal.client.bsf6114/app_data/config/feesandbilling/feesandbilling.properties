#Below entries are to specify which FeesAndBilling service is in use 
# Dummy Service
#services.FeesAndBillingService.classname=com.misys.portal.feesandbilling.services.DummyFABService
# Real Service
services.FeesAndBillingService.classname=com.misys.portal.feesandbilling.services.FABService

#Path to read test data XML - to be used only for DummyFeeInquiryServices. Default: feesandbilling/service/dummy/
services.FeesAndBillingService.root=feesandbilling/service/feeinquiry/scripts/dummy/

#Configuration in FFC - Rest server URL for Source
services.FeesAndBillingService.url=http://blr2portal049:7478/mch-rest/text/


#Load the service in the portal start up.
services.FeesAndBillingService.earlyInit = false
#Load the service when requested by an object.
#services.FeesAndBillingService.earlyInit = false

#Below entries are to specify which BankInvoiceService service is in use 
# Dummy Service
services.BankInvoiceService.classname=com.misys.portal.feesandbilling.services.DummyBIService
# Real Service
#services.BankInvoiceService.classname=com.misys.portal.feesandbilling.services.BIService

#Path to read test data XML - to be used only for DummyFeeInquiryServices. Default: feesandbilling/service/dummy/
services.BankInvoiceService.root=feesandbilling/service/bankinvoice/scripts/dummy/

#Configuration in FFC - Rest server URL for Source
services.BankInvoiceService.url=http://blr2portal049:7478/mch-rest/text/

#Load the service in the portal start up.
services.BankInvoiceService.earlyInit = false
#Load the service when requested by an object.
#services.BankInvoiceService.earlyInit = false

#FAB scheduler
#user status(es) to be exported for FAB charge (Active,Inactive,Locked)
fab.user.status=Active, Locked
#customer status(es) to be exported for FAB charge (Active,Inactive)
fab.customer.status=Active
#no of transaction per file to be sent to queue towards FAB through FFC
fab.batch.no=100

#Invoice Payment Service validation (if true then it will call the service to get the real time details, otherwise it will take data from DB.)
invoice.payment.service.validation = false

#transaction statuses under which multiple payment in not allowed for same invoice reference(allowed statuses are INCOMPLETE,UNCONTROLLED,CONTROLLED,ACKNOWLEDGED,INCOMPLETE_BANK,UNCONTROLLED_BANK)
invoice.payment.statuses=CONTROLLED,INCOMPLETE_BANK,UNCONTROLLED_BANK

# Fee Inquiry Records Download limit
feeInquiry.records.download.limit = 200

#Property to enable/disable security using OIDC
enable.oidc.security.for.frm = false

#Authorization Server's Wellknown URL, this URL is used for retrieving and validating the access token  
oidc.auth.server.url.for.frm = http://blrcslcbvp0026:8081/auth/realms/mdmUser/.well-known/openid-configuration

#Client-ID of the application registered in Auth Server (Required to Procure Access Token)
oidc.client.id.for.frm = frm

#Client-Secret of the application registered in Authorization Server (Required to Procure Access Token). This value should be in encrypted form, if not encrypted, set oidc.client.secret.encrypted.for.frm = false
oidc.client.secret.for.frm = CXZmWsJPOY34jwFRQ7VW1P90tEgE8d6mEANOPINKp3xmcYLkjHcH+HBmtAnnhXqPo+CYuQ+72/BPzB+eZaNREWX+dhB6eW8SWkamfEbitL1yyPOL/0KCfplD7dAECJ8/pRb8xlNluueaTvz1HuxcUUy9CzePjJTh/ZQkGeRxe1qLKKSMEOK5Ypw8wVBJ6qYD+3MpCKz1leLP1YoOo14uYhg+pbDW8Peq+iaY1ifOqsbfi2fssdTsGoVnk4hCjKV67VY5U6BDw7ShkdJS11Z2pC0TyCgPzacm61BWMYxy0hoZZVDmlFXUwdXbVLsv31nbomd6jTe1dA3Q9nEbE68nPA==

#Property to tell if client secret is encrypted. True if encrypted, false otherwise
oidc.client.secret.encrypted.for.frm = true

#Location of the Private Key keystore. 
oidc.encryption.keystore.location.for.frm = C:/OpenSSL-Win64/bin/identity.jks

#Password of Keystore
oidc.encryption.keystore.pswd.for.frm = password

#Password of the keyentry
oidc.encryption.keyentry.pswd.for.frm = password

#Alias used in Keyentry
oidc.encryption.keyentry.alias.for.frm = mykey
